<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shopping.mapper.OrderMapper">
    <select id="selectOrderInfo" resultType="com.shopping.vo.OrderInfoVo">
select 
    oi_seq, oi_reg_dt, oi_pay_info, oi_delivery_no, oi_delivery_status,
    oi_prod_count, mi_seq, mi_id, mi_name, mi_email, mi_address, mi_phone,
    pi_seq,   pi_name, pi_discount_rate, pi_point_rate, pi_price, pi_img_uri,
    si_seq, si_name, si_address, si_email, si_phone ,
	(pi_price - (pi_price * pi_discount_rate / 100)) * oi_prod_count 
	as final_price,
	pi_price * pi_point_rate / 100 * oi_prod_count as final_point
from
(
    (
        select * from order_info oi inner join member_info mi
        on oi.oi_mi_seq = mi.mi_seq
    ) od
        inner join
    (
         select * from product_info pi inner join seller_info si 
        on pi.pi_si_seq = si.si_seq
    ) product
    on od.oi_pi_seq = product.pi_seq
)
order by oi_reg_dt desc
limit 10 offset #{offset}
    </select>
    <select id="selectOrderCount" resultType="java.lang.Integer">
        select count(*) from order_info;
    </select>
    <update id="updateDeliveryStatus">
        update order_info set oi_delivery_status = #{status}
        where oi_seq = #{oi_seq}
    </update>
</mapper>